Code:

import os
# Complete the 'biggerIsGreater' function below.
# The function is expected to return a STRING.
# The function accepts STRING w as parameter.
    
def biggerIsGreater(w):
    # Write your code here
    arr = list(w)
    str1 = ""
    
    # find non-increasing suffix
    i = len(arr) - 1
    while i > 0 and arr[i-1] >= arr[i]:
        i -= 1
        
    if i <= 0:
        return 'no answer'
    
    # find successor to pivot
    j = len(arr) - 1
    while arr[j] <= arr[i-1]:
        j -= 1
    arr[j],arr[i-1] = arr[i-1],arr[j]
    
    # Reverse suffix
    arr[i : ] = arr[len(arr) - 1 : i - 1 : -1]
    
    return (str1.join(arr))


if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    T = int(input().strip())

    for T_itr in range(T):
        w = input()

        result = biggerIsGreater(w)

        fptr.write(result + '\n')

    fptr.close()
    
    ![](https://www.nayuki.io/res/next-lexicographical-permutation-algorithm/next-permutation-algorithm.svg)
