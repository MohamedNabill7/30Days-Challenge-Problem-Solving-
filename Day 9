Code:
import os

# Complete the 'jumpingOnClouds' function below.
# The function is expected to return an INTEGER.
# The function accepts INTEGER_ARRAY c as parameter.


def jumpingOnClouds(c):
    # Write your code here
    if len(c) == 1:
        return 0
    
    if len(c) == 2:
        if c[1] == 1:
            return 0
        else:
            return 1
    
    if c[2] == 1:
         return 1 + jumpingOnClouds(c[1:])
    else:
        return 1 + jumpingOnClouds(c[2:]) 

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')
    n = int(input().strip())
    c = list(map(int, input().rstrip().split()))
    result = jumpingOnClouds(c)
    fptr.write(str(result) + '\n')
    fptr.close()

-------------------------------------------------------------------------------------------------------------------------------------

Code:
import os

# Complete the 'flippingBits' function below.
# The function is expected to return a LONG_INTEGER.
# The function accepts LONG_INTEGER n as parameter.

def flippingBits(n):
    # Write your code here
    num = '{:032b}'.format(n)
    flip_num = ''
    count = 0
    
    for x in num:
        if x == '0':
            flip_num += '1'
        else:
            flip_num += '0'
    
    flip_num = flip_num[::-1]
    
    for i in range(0,len(flip_num)):
        if(flip_num[i] == "1"):
            count += 2**i
    
    return count

    
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')
    q = int(input().strip())
    for q_itr in range(q):
        n = int(input().strip())
        result = flippingBits(n)
        fptr.write(str(result) + '\n')
    fptr.close()
